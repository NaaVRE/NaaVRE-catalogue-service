meta {
  name: Retrieve with next version
  type: http
  seq: 18
}

get {
  url: {{baseUrl}}/workflow-cells/{{otherValidCellUUIDv1}}/
  body: none
  auth: bearer
}

auth:bearer {
  token: {{ourJWT}}
}

tests {
  test("Status code is 200", function () {
    expect(res.getStatus()).to.equal(200);
  });
  
  
  
  test("JSON response is valid", function () {
    var jsonData = res.getBody();
    const nextVersionUrl = `${bru.getEnvVar("baseUrl")}/workflow-cells/${bru.getVar("otherValidCellUUIDv2")}/`;
    expect(jsonData).to.deep.include({
      "owner": "test-user-2",
      "virtual_lab": "test-virtual-lab-1",
      "base_container_image": null,
      "dependencies": [],
      "inputs": [],
      "outputs": [],
      "confs": [],
      "params": [],
      "secrets": [],
      "title": "test-cell-3",
      "description": "",
      "version": 1,
      "container_image": "test-image-3",
      "kernel": "",
      "source_url": "",
      "next_version": nextVersionUrl
    });
    expect(jsonData.url).is.not.null;
    expect(jsonData.created).is.not.null;
    expect(jsonData.modified).is.not.null;
  });
}
